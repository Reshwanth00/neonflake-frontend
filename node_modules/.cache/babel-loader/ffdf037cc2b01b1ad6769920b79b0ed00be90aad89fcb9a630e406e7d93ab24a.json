{"ast":null,"code":"var _jsxFileName = \"/home/reshwanth/Office work/neonflask/frontend/src/UploadPage.js\",\n  _s = $RefreshSig$();\nimport { useState, useRef, useEffect } from 'react';\nimport classes from './UploadPage.module.css';\nimport { postInDb } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadPage = props => {\n  _s();\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [upload, setUpload] = useState(\"not uploaded\");\n  const imageFileRef = useRef(null);\n  const videoFileRef = useRef(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setUpload(\"uploading\");\n    const formData = {\n      title: title,\n      description: description,\n      imageFile: imageFileRef.current.files[0],\n      videoFile: videoFileRef.current.files[0]\n    };\n    await postInDb({\n      formData,\n      setRerender: props.setRender,\n      setUpload\n    });\n    setTitle(\"\");\n    setDescription(\"\");\n    imageFileRef.current.value = null;\n    videoFileRef.current.value = null;\n    props.webPage2Ref.current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.innerContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.inputTextContainer,\n        children: \"Neon Flake\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        maxLength: \"50\",\n        value: title,\n        required: true,\n        className: classes.inputField,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        placeholder: \"Description\",\n        maxLength: \"200\",\n        value: description,\n        required: true,\n        className: classes.textareaField,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/jpeg,image/png\",\n        required: true,\n        className: classes.imageInput,\n        ref: imageFileRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"video/mpg,video/avi,video/mp4\",\n        required: true,\n        className: classes.videoInput,\n        ref: videoFileRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), upload === \"not uploaded\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.buttonInput,\n        onClick: handleSubmit,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this), upload === \"uploading\" && /*#__PURE__*/_jsxDEV(\"button\", {\n        className: classes.buttonInput,\n        children: \"Uploading\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadPage, \"iqs6Pz0CSyO60RDUsJWJP/lsUd4=\");\n_c = UploadPage;\nexport default UploadPage;\nvar _c;\n$RefreshReg$(_c, \"UploadPage\");","map":{"version":3,"names":["useState","useRef","useEffect","classes","postInDb","jsxDEV","_jsxDEV","UploadPage","props","_s","title","setTitle","description","setDescription","upload","setUpload","imageFileRef","videoFileRef","handleSubmit","e","preventDefault","formData","imageFile","current","files","videoFile","setRerender","setRender","value","webPage2Ref","scrollIntoView","behavior","className","mainContainer","children","innerContainer","inputTextContainer","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","maxLength","required","inputField","onChange","target","textareaField","accept","imageInput","ref","videoInput","buttonInput","onClick","_c","$RefreshReg$"],"sources":["/home/reshwanth/Office work/neonflask/frontend/src/UploadPage.js"],"sourcesContent":["import { useState, useRef, useEffect } from 'react';\nimport classes from './UploadPage.module.css';\nimport { postInDb } from './Api';\n\nconst UploadPage = (props) => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [upload, setUpload] = useState(\"not uploaded\");\n\n  const imageFileRef = useRef(null);\n  const videoFileRef = useRef(null);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setUpload(\"uploading\");\n    const formData = {\n      title: title,\n      description: description,\n      imageFile: imageFileRef.current.files[0],\n      videoFile: videoFileRef.current.files[0]\n    };\n    await postInDb({ formData, setRerender: props.setRender, setUpload });\n    setTitle(\"\");\n    setDescription(\"\");\n    imageFileRef.current.value = null;\n    videoFileRef.current.value = null;\n    props.webPage2Ref.current.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div className={classes.mainContainer}>\n      <div className={classes.innerContainer}>\n        <div className={classes.inputTextContainer}>\n          Neon Flake\n        </div>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          maxLength=\"50\"\n          value={title}\n          required\n          className={classes.inputField}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <textarea\n          placeholder=\"Description\"\n          maxLength=\"200\"\n          value={description}\n          required\n          className={classes.textareaField}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <input\n          type=\"file\"\n          accept=\"image/jpeg,image/png\"\n          required\n          className={classes.imageInput}\n          ref={imageFileRef}\n        />\n        <input\n          type=\"file\"\n          accept=\"video/mpg,video/avi,video/mp4\"\n          required\n          className={classes.videoInput}\n          ref={videoFileRef}\n        />\n        {\n          upload === \"not uploaded\" &&\n          <button className={classes.buttonInput} onClick={handleSubmit}>\n            Upload\n          </button>\n        }\n        {\n          upload === \"uploading\" &&\n          <button className={classes.buttonInput}>\n            Uploading\n          </button>\n        }\n      </div>\n    </div>\n  );\n};\n\nexport default UploadPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}