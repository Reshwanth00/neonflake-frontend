{"ast":null,"code":"var _jsxFileName = \"/home/reshwanth/Office work/neonflask/frontend/src/WebPage2.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport OneThumbnail from './OneThumbnail';\nimport classes from './WebPage2.module.css';\nimport { getInDb } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WebPage2 = props => {\n  _s();\n  const [allFolders, setFolders] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getInDb(); // Fetch data\n        if (Array.isArray(data)) {\n          setFolders(data); // Set data to state\n        } else {\n          console.error(\"Received data is not an array:\", data);\n          setFolders([]); // Set an empty array in case of unexpected data\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setFolders([]); // Set an empty array on error\n      }\n    };\n    fetchData();\n  }, [props.render]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.mainContainer,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.innerContainer,\n      children: allFolders.length > 0 ? allFolders.map((oneItem, index) => /*#__PURE__*/_jsxDEV(OneThumbnail, {\n        item: oneItem,\n        onClick: () => props.onThumbnailClick(oneItem.videoFile.videoUrl) // Pass the video URL on click\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No items found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) // Optional: Show a message when there are no items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(WebPage2, \"QnS+i1TnDqw7EzSnL9B0RvFx8xc=\");\n_c = WebPage2;\nexport default WebPage2;\nvar _c;\n$RefreshReg$(_c, \"WebPage2\");","map":{"version":3,"names":["useEffect","useState","OneThumbnail","classes","getInDb","jsxDEV","_jsxDEV","WebPage2","props","_s","allFolders","setFolders","fetchData","data","Array","isArray","console","error","render","className","mainContainer","children","innerContainer","length","map","oneItem","index","item","onClick","onThumbnailClick","videoFile","videoUrl","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/reshwanth/Office work/neonflask/frontend/src/WebPage2.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport OneThumbnail from './OneThumbnail';\nimport classes from './WebPage2.module.css';\nimport { getInDb } from './Api';\n\nconst WebPage2 = (props) => {\n  const [allFolders, setFolders] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await getInDb(); // Fetch data\n        if (Array.isArray(data)) {\n          setFolders(data); // Set data to state\n        } else {\n          console.error(\"Received data is not an array:\", data);\n          setFolders([]); // Set an empty array in case of unexpected data\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        setFolders([]); // Set an empty array on error\n      }\n    };\n    fetchData();\n  }, [props.render]);\n\n  return (\n    <div className={classes.mainContainer}>\n      <div className={classes.innerContainer}>\n        {allFolders.length > 0 ? (\n          allFolders.map((oneItem, index) => (\n            <OneThumbnail \n              key={index}\n              item={oneItem}\n              onClick={() => props.onThumbnailClick(oneItem.videoFile.videoUrl)} // Pass the video URL on click\n            />\n          ))\n        ) : (\n          <p>No items found</p>  // Optional: Show a message when there are no items\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default WebPage2;\n"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,OAAO,MAAM,uBAAuB;AAC3C,SAASC,OAAO,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,QAAQ,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC1B,MAAM,CAACC,UAAU,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE7CD,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,IAAI,GAAG,MAAMT,OAAO,CAAC,CAAC,CAAC,CAAC;QAC9B,IAAIU,KAAK,CAACC,OAAO,CAACF,IAAI,CAAC,EAAE;UACvBF,UAAU,CAACE,IAAI,CAAC,CAAC,CAAC;QACpB,CAAC,MAAM;UACLG,OAAO,CAACC,KAAK,CAAC,gCAAgC,EAAEJ,IAAI,CAAC;UACrDF,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;QAClB;MACF,CAAC,CAAC,OAAOM,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;QAC5CN,UAAU,CAAC,EAAE,CAAC,CAAC,CAAC;MAClB;IACF,CAAC;IACDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,KAAK,CAACU,MAAM,CAAC,CAAC;EAElB,oBACEZ,OAAA;IAAKa,SAAS,EAAEhB,OAAO,CAACiB,aAAc;IAAAC,QAAA,eACpCf,OAAA;MAAKa,SAAS,EAAEhB,OAAO,CAACmB,cAAe;MAAAD,QAAA,EACpCX,UAAU,CAACa,MAAM,GAAG,CAAC,GACpBb,UAAU,CAACc,GAAG,CAAC,CAACC,OAAO,EAAEC,KAAK,kBAC5BpB,OAAA,CAACJ,YAAY;QAEXyB,IAAI,EAAEF,OAAQ;QACdG,OAAO,EAAEA,CAAA,KAAMpB,KAAK,CAACqB,gBAAgB,CAACJ,OAAO,CAACK,SAAS,CAACC,QAAQ,CAAE,CAAC;MAAA,GAF9DL,KAAK;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGX,CACF,CAAC,gBAEF7B,OAAA;QAAAe,QAAA,EAAG;MAAc;QAAAW,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,CAAE;IACxB;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAtCIF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAwCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}