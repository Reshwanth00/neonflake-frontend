{"ast":null,"code":"import axios from 'axios';\nexport const postInDb = async formData => {\n  const passKey = \"Neonflake\";\n  const cloud = \"CloudinaryReshwanth\";\n  const videoUpload = new FormData();\n  videoUpload.append(\"upload_preset\", passKey);\n  videoUpload.append(\"file\", formData.videoFile);\n  const imageUpload = new FormData();\n  imageUpload.append(\"upload_preset\", passKey);\n  imageUpload.append(\"file\", formData.imageFile);\n  try {\n    const videoResponse = await axios.post(`https://api.cloudinary.com/v1_1/${cloud}/video/upload`, videoUpload);\n    console.log(\"Video upload success:\", videoResponse.data);\n    const imageResponse = await axios.post(`https://api.cloudinary.com/v1_1/${cloud}/image/upload`, imageUpload);\n    console.log(\"Image upload success:\", imageResponse.data);\n    const postData = {\n      title: formData.title,\n      description: formData.description,\n      imageFile: {\n        imageName: imageResponse.data.original_filename,\n        imageUrl: imageResponse.data.secure_url\n      },\n      videoFile: {\n        videoName: videoResponse.data.original_filename,\n        videoUrl: videoResponse.data.secure_url\n      }\n    };\n    const dbResponse = await axios.post(\"http://localhost:3001/api/post\", postData);\n    console.log(\"Data posted to DB:\", dbResponse.data);\n  } catch (error) {\n    console.error(\"Error during processing:\", error);\n  }\n};\nexport const getInDb = async setFolders => {\n  axios.get(\"http://localhost:3001/api/post\").then(res => setFolders(res.data));\n};","map":{"version":3,"names":["axios","postInDb","formData","passKey","cloud","videoUpload","FormData","append","videoFile","imageUpload","imageFile","videoResponse","post","console","log","data","imageResponse","postData","title","description","imageName","original_filename","imageUrl","secure_url","videoName","videoUrl","dbResponse","error","getInDb","setFolders","get","then","res"],"sources":["/home/reshwanth/Office work/neonflask/frontend/src/Api.js"],"sourcesContent":["import axios from 'axios';\n\nexport const postInDb = async (formData) => {\n    const passKey = \"Neonflake\";\n    const cloud = \"CloudinaryReshwanth\";\n\n    const videoUpload = new FormData();\n    videoUpload.append(\"upload_preset\", passKey);\n    videoUpload.append(\"file\", formData.videoFile);\n\n    const imageUpload = new FormData();\n    imageUpload.append(\"upload_preset\", passKey);\n    imageUpload.append(\"file\", formData.imageFile);\n\n    try {\n        const videoResponse = await axios.post(`https://api.cloudinary.com/v1_1/${cloud}/video/upload`, videoUpload);\n        console.log(\"Video upload success:\", videoResponse.data);\n        const imageResponse = await axios.post(`https://api.cloudinary.com/v1_1/${cloud}/image/upload`, imageUpload);\n        console.log(\"Image upload success:\", imageResponse.data);\n        const postData = {\n            title: formData.title,\n            description: formData.description,\n            imageFile: {\n                imageName: imageResponse.data.original_filename,\n                imageUrl: imageResponse.data.secure_url\n            },\n            videoFile: {\n                videoName: videoResponse.data.original_filename,\n                videoUrl: videoResponse.data.secure_url\n            }\n        };\n        const dbResponse = await axios.post(\"http://localhost:3001/api/post\", postData);\n        console.log(\"Data posted to DB:\", dbResponse.data);\n    } catch (error) {\n        console.error(\"Error during processing:\", error);\n    }\n};\n\n\nexport const getInDb = async (setFolders) => {\n    axios.get(\"http://localhost:3001/api/post\")\n    .then(\n        res => (\n            setFolders(res.data)\n        )\n    )\n}\n\n\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,QAAQ,GAAG,MAAOC,QAAQ,IAAK;EACxC,MAAMC,OAAO,GAAG,WAAW;EAC3B,MAAMC,KAAK,GAAG,qBAAqB;EAEnC,MAAMC,WAAW,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAClCD,WAAW,CAACE,MAAM,CAAC,eAAe,EAAEJ,OAAO,CAAC;EAC5CE,WAAW,CAACE,MAAM,CAAC,MAAM,EAAEL,QAAQ,CAACM,SAAS,CAAC;EAE9C,MAAMC,WAAW,GAAG,IAAIH,QAAQ,CAAC,CAAC;EAClCG,WAAW,CAACF,MAAM,CAAC,eAAe,EAAEJ,OAAO,CAAC;EAC5CM,WAAW,CAACF,MAAM,CAAC,MAAM,EAAEL,QAAQ,CAACQ,SAAS,CAAC;EAE9C,IAAI;IACA,MAAMC,aAAa,GAAG,MAAMX,KAAK,CAACY,IAAI,CAAC,mCAAmCR,KAAK,eAAe,EAAEC,WAAW,CAAC;IAC5GQ,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEH,aAAa,CAACI,IAAI,CAAC;IACxD,MAAMC,aAAa,GAAG,MAAMhB,KAAK,CAACY,IAAI,CAAC,mCAAmCR,KAAK,eAAe,EAAEK,WAAW,CAAC;IAC5GI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEE,aAAa,CAACD,IAAI,CAAC;IACxD,MAAME,QAAQ,GAAG;MACbC,KAAK,EAAEhB,QAAQ,CAACgB,KAAK;MACrBC,WAAW,EAAEjB,QAAQ,CAACiB,WAAW;MACjCT,SAAS,EAAE;QACPU,SAAS,EAAEJ,aAAa,CAACD,IAAI,CAACM,iBAAiB;QAC/CC,QAAQ,EAAEN,aAAa,CAACD,IAAI,CAACQ;MACjC,CAAC;MACDf,SAAS,EAAE;QACPgB,SAAS,EAAEb,aAAa,CAACI,IAAI,CAACM,iBAAiB;QAC/CI,QAAQ,EAAEd,aAAa,CAACI,IAAI,CAACQ;MACjC;IACJ,CAAC;IACD,MAAMG,UAAU,GAAG,MAAM1B,KAAK,CAACY,IAAI,CAAC,gCAAgC,EAAEK,QAAQ,CAAC;IAC/EJ,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEY,UAAU,CAACX,IAAI,CAAC;EACtD,CAAC,CAAC,OAAOY,KAAK,EAAE;IACZd,OAAO,CAACc,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;EACpD;AACJ,CAAC;AAGD,OAAO,MAAMC,OAAO,GAAG,MAAOC,UAAU,IAAK;EACzC7B,KAAK,CAAC8B,GAAG,CAAC,gCAAgC,CAAC,CAC1CC,IAAI,CACDC,GAAG,IACCH,UAAU,CAACG,GAAG,CAACjB,IAAI,CAE3B,CAAC;AACL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}